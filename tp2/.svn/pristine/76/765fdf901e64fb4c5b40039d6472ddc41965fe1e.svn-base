\subsubsection{Implementacion 1}

\textbf{Explicacion Assembler}

En la primera implementación del filtro Merge, realizamos un solo ciclo en el cual iteramos de a cuatro píxeles, recorriendo toda una fila.

%\begin{figure}[ht!]
%\centering
%\includegraphics[width=90mm]{lena.bmp}
%\caption{*************INSERTAR IMAGEN DE LOS PIXELES QUE TOMAMOS EN UNA FILA*************}
%\end{figure}

Al llegar al final de una fila, se actualizan los punteros de las imágenes sumándole al puntero el tamaño de la fila, reiniciamos el offset, incrementamos el contador de filas y comparamos dicho contador con la cantidad total de filas para saber si terminamos de recorrer la imagen.

%\begin{figure}[ht!]
%\centering
%\includegraphics[width=90mm]{lena.bmp}
%\caption{*************INSERTAR IMAGEN DE UNA FILA RECORRIDA DENTRO DE LA MATRIZ*************
%}
%\end{figure}

Dentro del ciclo guardamos en dos registros xmm los cuatro píxeles de cada imagen. Luego desempaquetamos cada registro en otros dos registros para no perder información. Para volver a desempaquetar nuevamente y tener cada pixel ocupando un registro xmm. Luego los convertimos a float.
%
%\begin{figure}[ht!]
%\centering
%\includegraphics[width=90mm]{lena.bmp}
%\caption{*************INSERTAR IMAGEN DE LOS XMM CORRESPONDIENTES CON LAS LOS PIXELES*************}
%\end{figure}

Luego realizamos el producto del RGB del píxel por nuestro value, dejando intacto A, y en otro registro el mismo píxel por 1-value y sumamos los resultados. El siguiente paso es convertir a dword integer y los empaquetamos de dword a word y de word a byte para que el píxel recupere su valor original.

%\begin{figure}[ht!]
%\centering
%\includegraphics[width=90mm]{lena.bmp}
%\caption{*************INSERTAR IMAGEN DE LO QUE PASA CON RGB Y COMO EMPAQUETAMOS Y DESEMPAQUETAMOS*************
%*}
%\end{figure}

Vuelvo a guardar el pixel en memoria, avanzo a los próximos cuatro píxeles y como último paso me fijo si llegue el final de la fila para saber si tengo que actualizar el offset, los punteros y el contador.


\subsubsection{Implementacion 2}

\textbf{Explicacion Assembler}

En la segunda implementación del filtro Merge se utiliza un ciclo, pero antes de inicializarlo, inicializamos un contador de filas y columnas , hacemos un Shuffle Packed Single(shufps) para tener 4 veces en el mismo registro el value y luego multiplicarle una máscara  